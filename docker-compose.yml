version: '3'
services:
  db:
    image: postgres:13
    volumes:
      - ./async_api/dump.sql:/docker-entrypoint-initdb.d/dump.sql:ro
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    env_file:
      - ./.env.db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U app -d movies_database'"]
      interval: 2s
      timeout: 5s
      retries: 120
  elastic:
    image: elasticsearch:7.17.8
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1000m -Xmx1000m
    expose:
      - 9200
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:9200 | grep -q 'HTTP/1.1 200 OK'"]
      interval: 2s
      timeout: 5s
      retries: 120
  redis:
    image: redis:7.0.7
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 120
  etl:
    build: ./etl_movies
    env_file:
      - ./.env.etl
      - ./.env.db
    depends_on:
      db:
        condition: service_healthy
      elastic:
        condition: service_healthy
  api:
    build: ./async_api
    environment:
      - REDIS_HOST=redis
      - ELASTIC_HOST=elastic
    expose:
      - 8000
    depends_on:
      elastic:
        condition: service_healthy
      redis:
        condition: service_healthy
  nlu:
    build: ./nlu_rasa
    expose:
      - 5005
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5005/ | grep -q 'Hello from Rasa'"]
      interval: 2s
      timeout: 5s
      retries: 120
  assist:
    build: ./assistant
    env_file:
      - ./.env.assist
    expose:
      - 8000
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:8000/api/openapi | grep -q 'HTTP/1.1 200 OK'"]
      interval: 2s
      timeout: 5s
      retries: 120
    depends_on:
      nlu:
        condition: service_healthy
      redis:
        condition: service_healthy
  nginx:
    image: nginx:1.23.2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - 80:80
    depends_on:
      assist:
        condition: service_healthy
volumes:
  elastic_data:
  postgres_data: